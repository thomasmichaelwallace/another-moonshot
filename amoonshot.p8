pico-8 cartridge // http://www.pico-8.com
version 29
__lua__
--another moonshot
--@thomasmichaelwallace

--flags:
--0:blocks char
--   unless 4,4 is trans and map
--    has colour changer.
--   blocks looker sight unless
--    is in lk.t
--1:can be talked to
--   looks up tx[v] for dia.
--2:can host/is placeable
--   (+1) is host else placable
--3:can be pushed/pushed on
--   (+1) is pushable else on.
--4:can be cut
--5:can be collected
--6:is colour changer
--7:is swing hook

function _init()
 printh("_init")
 --_init_tit()
end

function _update60()
 if(tl.v)then
  _update_tit()
 else
	 _update_map()
	 if(dg.v)then
	  _update_dia()
	 else
	  _update_res()
	  _update_lok()
	  _update_fig()
	  _update_cut()
	  _update_swg()
	 end
	end
end

function _draw()
 cls()
 if(tl.v)then
  _draw_tit()
 else
	 _draw_map()
	 _draw_lok()
	 _draw_fig()
	 _draw_dia()
	 _draw_cut()
	end
end
-->8
--map system

mp={--map state
 n=2,--ok:10,--map no.
 x=0,--screen top-left x
 y=0,-- /y
 s={--scroll
  t=false,--scrolling
  n=0,--next map no.
  d=0,--direciton 0⬅️➡️⬆️⬇️3
  x=0,--n/map s/top-left x
  y=0,-- /y
 },
 a={--animations
  t=0,--tick
  f=0,--frame no.
  b=false,--blit.
 }
}

--n:sprite tile no
--sx/y:screen x/y
function mapn(n,sx,sy)
 if(rb.c~=nil)then
  --only affected
  if(n==8 or n==15)palt(rb.c,true)
 end
 local y=0
 if(n>7)then
  y=16
  n-=8
 end
 local x=16*n 
 map(x,y,sx,sy,16,16)
 --blit animation
 if(mp.a.b)then
  for ax=x,x+16,1 do
   for ay=y,y+16,1 do
    local m=mget(ax,ay)
    if(m>=128 and m<=191)then
     if(m%2==1)then
      mset(ax,ay,m-1)
     else
      mset(ax,ay,m+1)
     end
    end
   end
  end
  mp.a.b=false
 end
 if(rb.c~=nil)palt(rb.c,false)
end

function scroll_map()
 local s=8--speed
 if(mp.s.t)then
  if(mp.s.d==1)then
   mp.x-=s
   mp.s.x-=s
   fg.x-=s
   if(mp.s.x<=0)mp.s.t=false
  elseif(mp.s.d==0)then
   mp.x+=s
   mp.s.x+=s
   fg.x+=s
   if(mp.s.x>=0)mp.s.t=false
  elseif(mp.s.d==3)then
   mp.y-=s
   mp.s.y-=s
   fg.y-=s
   if(mp.s.y<=0)mp.s.t=false
  elseif(mp.s.d==2)then
   mp.y+=s
   mp.s.y+=s
   fg.y+=s
   if(mp.s.y>=0)mp.s.t=false
  end
  if(mp.s.t==false)then
   mp.x=0
   mp.y=0
   mp.n=mp.s.n
   mp.s.x=0
   mp.s.y=0
  end
 end
end

--d:scroll direction 0⬅️➡️⬆️⬇️3
function move_map(d)
 local n=mp.n
 if(d==0)then--⬅️
  if(n==0)return
  if(n>4 and n<=8)return
  if(n>12)return
  mp.s.n=n-1
  mp.s.x=-128
 elseif(d==1)then--➡️
  if(n>=4 and n<8)return
  if(n>=12)return
  mp.s.n=n+1
  mp.s.x=128
 elseif(d==2)then--⬆️
  if(n==15)n=16
  if(n==6)n=18
  if(n<=1)return
  if(n==2)n=15
  if(n==3)return
  if(n==4)n=21
  if(n==7 or n==5)return
  mp.s.n=n-8
  mp.s.y=-128
 elseif(d==3)then--⬇️
  if(n==7)n=-6
  if(n==13)n=-4
  if(n==8)n=7
  if(n==9)return
  if(n==10)n=-2
  if(n==11 or n==12)return
  if(n==15 or n==14)return
  mp.s.n=n+8  
  mp.s.y=128
 end
 mp.s.t=true
 mp.s.d=d
end

function mxyget(x,y)
 local mx,my=x/8,y/8
 local n=mp.n
 if(n>7)then
  n-=8
  my+=16
 end
 mx+=16*n
 my=min(31,my)
 return {mx=mx,my=my}
end

--x/y:screen x/y
function mgetp(x,y)
 local p=mxyget(x,y)
 return mget(p.mx,p.my)
end

--x/y:screen x/y
--v:map value
function msetp(x,y,v)
 local p=mxyget(x,y)
 --syncronise v with ani.
 if(v>=128 and v<=191)v+=mp.a.f
 return mset(p.mx,p.my,v)
end

function _update_map()
 --animations
 mp.a.t+=1
 if(mp.a.t==24)then--frames/second
  mp.a.t=0
  mp.a.f=(mp.a.f+1)%2
  mp.a.b=true
 end
 --scroll 
 if(mp.s.t)scroll_map()
end

function _draw_map()
 mapn(mp.n,mp.x,mp.y)
 if(mp.s.t)then
  mapn(mp.s.n,mp.s.x,mp.s.y)
 end
end
-->8
--dialogue system

dg={--dialogue state
 v=false,--show
 n="name",--name
 t="text.",--text
 s=64,--t/l sprite no.
 i=1,--selected index
 c=7,--text color
 h=6,--highlight colour
 o={{--dia.options list
  t="ok",--text
  f=function()end,--selected fn.
 }}
}

ch={--character definitions
 {
 	s=64,--sprite
 	n="ol' dog blue",--name
 	c=12,--highlight colour
 },
 {s=66,c=6,n="gray face"},
 {s=68,c=14,n="pink dog"}
}

--n:t/l sprite no.
--w/h:width/height in sprites
--dx/dy:t/l screen position
--s:scale factor
function zspr(n,w,h,dx,dy,s)
 local sx,sy=(n%16)*8,(n\16)*8
 local sw,sh=8*w,8*h
 local dw,dh=sw*s,sh*s
 sspr(sx,sy,sw,sh,dx,dy,dw,dh)
end

--s:string
--lw:max pixel line width
function word_wrap(s,lw)
 local l={}--lines
 local b=""--buffer
 local w=0--line width
 local cl=""--current line
 local cw=0--current width
 local nl=false--new line
 
 for n=1,#s do
  nl=false
  local c=sub(s,n,n)
  if(ord(c)==32)then
   cl,cw=cl..b,w
   b=c
  elseif(ord(c)==10)then
   cl,cw=cl..b,w
   b=""
   nl=true
  else
   b=b..c
  end
  w+=4
  if(ord(c)>127)w+=4
  if(w>lw or nl)then
   if(#cl==0)then
    cl,cw=b,w
    w+=4
    b=" "
   end
   add(l,{t=cl,w=cw})
   cl=""
   b=sub(b,2)
   w-=(cw+4)
  end
 end
 cl=cl..b
 add(l,{t=cl,w=w})
 return l
end

--t:text
--x/y0/1:corners
--h/v:-101 l/c/r h/v align
--c:colour
function text_rect(t,x0,y0,x1,y1,h,v,c)
 local rw=abs(x0-x1)
 local rh=abs(y0-y1)
 local ox=min(x0,x1)
 local oy=min(y0,y1)
 local lns=word_wrap(t,rw)
 for n=1,#lns do
  local l=lns[n]
  local x=ox
  if(h==0)x+=flr((rw-l.w)/2)+1
  if(h==1)x+=(rw-l.w)+2
  if(v==-1)y=6*(n-1)
  if(v==0)y=flr((rh-6*#lns)/2)+6*(n-1)+1
  if(v==1)y=rh-(6*(#lns-n+1))+2
  y+=oy
  print(l.t,x,y,c)
 end
end

--i:tx data index/{cto}object
function show_dia(i)
 local t=type(i)=="table"and i or tx[i]
 dg.i=1
 dg.t=t.t
 dg.n=ch[t.c].n
 dg.h=ch[t.c].c
 dg.o=t.o
 dg.v=true
end

function try_dia()
 local c=fig_cast(4,1)
 if(c==nil)return false
 show_dia(c.m)
 return true
end

function _update_dia()
 if(not dg.v)return
 if(btnp(2)and dg.i>1)dg.i-=1
 if(btnp(3)and dg.i<#dg.o)dg.i+=1
 if(btnp(4)or btnp(5))then
  dg.v=false
  dg.o[dg.i].f()
 end
end

function _draw_dia()
 if(not dg.v)return
 --frame
 rectfill(11,11,117,117,0)
 rect(12,12,116,116,dg.h)
 rect(14,14,114,114,dg.h)
 --portrait and header
 zspr(dg.s,2,2,2,2,2)
 print(dg.n,36,24,dg.h)
 --body
 text_rect(dg.t,17,36,110,111,-1,-1,dg.c)
 --options
 print("\n")
 for i=1,#dg.o,1 do
  if(i==dg.i)then
   color(dg.h)
   print("웃"..dg.o[i].t)
  else
   color(dg.c)
   print("  "..dg.o[i].t)
  end
 end
end
-->8
--figure system

fg={--figure state
 --ok:x=80,y=104,--screen x/y
 x=80,y=104, 
 a={--animation sprites
	 --⬅️➡️⬆️⬇️
	 -- - still-move-flip?
	 {{193,209},{209,208},false},
	 {{193,209},{209,208}, true},
	 {{224,240},{194,210},false},
	 {{225,241},{226,242},false},
 },
 d=4,--direction no: 1⬅️➡️⬆️⬇️4
 m=false,--moving?
 t=0,--tick
 f=1,--animation frame no (1/2) 
}

--m:map tile no
--f:flag to check for
function fpget(m,f)
 local b=fget(m,f)
 if(not b)return false
 if(f>0)return true
 if(rb.c==nil)return true
 local x,y=(m%16)*8+4,(m\16)*8+4
 local c=sget(x,y)
 return c~=rb.c
end

--l:length in dir to check
--f:flag to check for
function fig_cast(l,f)
 --fig t/l
 local h=7--sprite height
 local w=6--/width
 --checkpoints 0,1
 local x0=fg.x+(8-w)/2
 local y0=fg.y+(8-h)
 local x1,y1=x0,y0 
 if(fg.d==1)then--⬅️
  x0-=l
  x1,y1=x0,y0+h-1--:웃
 elseif(fg.d==2)then--➡️
  x0+=w+l-1
  x1,y1=x0,y0+h-1--웃:
 elseif(fg.d==3)then--⬆️
  y0-=l          --..
  x1,y1=x0+w-1,y0--웃
 elseif(fg.d==4)then--⬇️
  y0+=h+l-1      --웃
  x1,y1=x0+w-1,y0--''
 end
 local m0,m1=mgetp(x0,y0),mgetp(x1,y1)
 local c=nil
 if(fpget(m0,f))then
  c={m=m0,x=x0,y=y0}
 elseif(fpget(m1,f))then
  c={m=m1,x=x1,y=y1}
 else
  return nil  
 end
 --normalise anis.
 if(c.m>=128 and c.m<=191)c.m-=c.m%2
 return c
end

function move_fig()
 local s=1/3--speed
 local m=fig_cast(s,0)
 --workaround 7 south block
 if(mp.n==7 and fg.y>120 and fg.d==4)m=nil
 if(m)return false
 if(fg.d==1)fg.x-=s
 if(fg.d==2)fg.x+=s
 if(fg.d==3)fg.y-=s
 if(fg.d==4)fg.y+=s
 return true
end

function try_scroll()
 if(fg.x<-4)then
  move_map(0)
 elseif(fg.x>124)then
  move_map(1)
 elseif(fg.y<-4)then
  move_map(2)
 elseif(fg.y>124)then
  move_map(3)
 end
end

function _update_fig()
 if(mp.s.t)return--scrolling
 if(hk.s)then--swinging
  try_scroll()
  return
 end
 --control
 local m=true
 if(btn(0))then
  fg.d=1
 elseif(btn(1))then
  fg.d=2
 elseif(btn(2))then
  fg.d=3
 elseif(btn(3))then
  fg.d=4
 else
  m=false
 end
 --collide 
 if(m)then
  try_push()
  try_collect()
  m=move_fig()
 end
 --scroll
 try_scroll()
 --interact
 if(btnp(4)or btnp(5))then
  if(try_dia())then
   --sideeffects
  elseif(try_place())then
  elseif(try_col())then
  elseif(try_swing())then
  elseif(try_cut())then
  end
 end
 --ticker
 fg.t+=1
 if(m~=fg.m)then
  fg.m=m
  fg.t=0--restart
 end
 if(fg.t==24)then
  fg.t=0
  fg.f+=1
  if(fg.f==3)fg.f=1
 end 
end

function _draw_fig()
 local a=fg.a[fg.d]
 local m=fg.m and 2 or 1
 local s=a[m][fg.f]
 spr(s,fg.x,fg.y,1,1,a[3])
end
-->8
--text resources

tc={--text constants
 ok={t="ok",f=function()end},
}

tx={--text resources
 [0]={--sprite no.
  c=1,--ch index
  t="test",--text block
  o={{--options list
   t="ok",--text
   f=function()end--sel.function
  }}
 },
 [176]={
  c=1,
  t="looks like you fell a long way.",
  o={
	  {
	   t="what happend to my ship?",
	   f=function()end
	  },{
	   t="your wife?!",
	   f=function()end
	  }
	 }
 },
 [176.1]={
  c=1,
  t="it has been done",
  o={tc.ok}
 },
 [178]={
  c=2,
  t="you found me.",
  o={{
   t="ok",
   f=function()
    rb.w=true
   end
  }}
 },
 [160]={
  c=3,
  t="my boe!.",
  o={
   tc.ok,{
    t="bob..",
    f=function()
     local i=160.1
     if(rb.w==true)i=160.2
     show_dia(i)
    end
  }},
 },
 [160.1]={
  c=3,
  t="you don't know.",
  o={tc.ok}
 },
 [160.2]={
  c=3,
  t="you do know!",
  o={tc.ok}
 },
}
-->8
--placable behaviour

pl={--placeble state mechanic
 n=0,--plates held
 s=196,--plate sprite
 r=128,--non-plate sprite
}

function try_place()
 c=fig_cast(8,2)
 if(c==nil)return false
 if(c.m==pl.s)then--pick up
  msetp(c.x,c.y,pl.r)
  pl.n+=1
 elseif(pl.n>0)then--put down
  pl.n-=1
  msetp(c.x,c.y,pl.s)
 else
  return false
 end
 return true
end
-->8
--pushable behaviour

pu={
 s=197,--normal sprite
 p=195,--placed sprite
 e=0,--effort
 x=0,--effort application x
 y=0,--/y
 w=false,--spawned first log
 f=false,--finished
}

function try_push()
 if(pu.f)return false
 local c=fig_cast(1,3)
 if(c==nil)return false
 --only push blocks
 if(not fget(c.m,0))return false
 --expend effort
 if(c.x==pu.x and c.y==pu.y)then
  pu.e+=1
 else
  pu.e,pu.x,pu.y=1,c.x,c.y
 end
 if(pu.e<16)return false
 --do push
 local x,y=c.x,c.y
 if(fg.d==1)x-=8
 if(fg.d==2)x+=8
 if(fg.d==3)y-=8
 if(fg.d==4)y+=8
 --blocked
 local t=mgetp(x,y)
 if(fget(t,0))return false
 if(not fget(t,3))return false
 local m=pu.s
 --placed 
 if(fget(mgetp(x,y),2))m=pu.p
 msetp(c.x,c.y,c.m+1) 
 msetp(x,y,m)
 --spawn second log
 if(not pu.w and x<0)then
  mset(58,21,pl.s)
  pu.w=true
 end
 --check win
 local p=mxyget(x,y)
 if(flr(p.mx)==45 and flr(p.my)==23)then
  pu.f=true
  show_dia(176.1)
 end
 return true
end
-->8
--cut grass behaviour

sw={
 s=211,--cut sprite
 n=0,--count
 t=false,--cutting
 f=0,--animation frame
 d=0,--/dir 1⬅️➡️⬆️⬇️4
 c=nil,--effected cast
 r=0,--animation rater
}

function try_collect()
 local x,y=fg.x+4,fg.y+4
 local m=mgetp(x,y)
 if(not fget(m,5))return false
 msetp(x,y,sw.s)
 sw.n+=1
 return true
end

function try_cut()
 --wait for animation
 if(sw.t)return false
 --trigger animation
 sw.t,sw.f,sw.d=true,0,fg.d
 --test effect 
 sw.c=fig_cast(8,4) 
 return c~=nil
end

function _update_cut()
 if(not sw.t)return
 sw.r+=1
 if(sw.f==0)sw.r=4--first timer
 if(sw.r==4)then
  sw.f+=1--move frame
  sw.r=0
 end
 if(sw.f==2 and sw.c)then
  msetp(sw.c.x,sw.c.y,sw.c.m+2)
 elseif(sw.f>3)then
  sw.t=false--end anim
 end
end

function _draw_cut()
 if(not sw.t)return
 local x=fg.x+4
 local y=fg.y+4
 local h=false
 local v=false
 if(sw.d==1)then
  x-=6
  y-=1
  h=true
  v=true
 elseif(sw.d==2)then
  x+=6
  y-=1
  v=true
 elseif(sw.d==3)then
  y-=7
  v=true
 elseif(sw.d==4)then
  y+=8
 end
 spr(211+sw.f,x-4,y-4,1,1,h,v)
end
-->8
--rainbow behaviour

rb={
 c=nil,
 w=false,--won
} 

function try_col()
 local c=fig_cast(3,6)
 if(c==nil)return false
 local l=rb.c or 7
 l+=1
 if(l>14)then
  rb.c=nil
 else
  rb.c=l
 end
 return true
end
-->8
--looker beaviour

lk={--looker state
 l={--lookers
  {--screen
   n=2,--screen
   x=39,y=7,--map x/y
   s=243,--first sprite
   v=60,--turn speed
   r=1,--rotate direction
   d=0,--direction 0⬅️⬆️➡️⬇️3
   t=0,--ticker
   h={--dialog c/t/o
    c=1,
    t="get out of here 2!",
    o={tc.ok},
   },
  },
  {
   n=7,x=116,y=9,
   s=247,
   v=60,r=1,
   d=2,t=0,
   h={
    c=1,o={tc.ok},
    t="get out of here 7.1!",
   },
  },
  {
   n=7,x=122,y=3,
   s=247,
   v=60,r=-1,
   d=0,t=0,
   h={
    c=1,o={tc.ok},
    t="get out of here 7.2!",
   },
  }
 },
 u=false,--update
 s=false,--spotted
 t={35,36},--see-thru
}

--l:looker instance
function lok_cast(l)
 local x,y=l.x*8%128+4,l.y*8%128+4
 local dx,dy=0,0--cast delta
 if(l.d==0)dx=-8--⬅️
 if(l.d==1)dy=-8--⬆️
 if(l.d==2)dx=8 --➡️
 if(l.d==3)dy=8 --⬇️
 local h=false--hit
 local s=false--stop
 local cw=6--check width
 local ch=cw--/height
 while(not s)do 
  x+=dx
  y+=dy  
  local cx,cy=x-4-cw,y-4-ch
  --spotted
  if(fg.x>cx and fg.x<(cx+2*cw)
   and fg.y>cy and fg.y<(cy+2*ch))then
   h,s=true,true
  end
  --off edge
  if(x<0 or x>128)s=true
  if(y<0 or y>128)s=true
  --hit block
  local m=mgetp(x,y)
  if(fget(m,0))then
   s=true
   for t in all(lk.t) do
    --unless transparent
    if(m==t)s=false
   end
  end  
 end
 return h
end

function _update_lok() 
 if(mp.s.t)return--skip scroll
 local c=false--clear
 for l in all(lk.l) do
  --don't see across screens
  if(l.n==mp.n)then
   --rotate 
		 l.t+=1
		 if(l.t>l.v)then
		  l.d+=l.r
		  l.t=0
		  if(l.d>3)l.d=0
		  if(l.d<0)l.d=3
		  c=true
		 end
	  --cast
		 if(not lk.s and lok_cast(l))then
		  lk.s=true
		  show_dia(l.h)
		 end
		end
 end
 if(c)lk.s=false
end

function _draw_lok()
 for l in all(lk.l) do
  if(l.n==mp.n)mset(l.x,l.y,l.s+l.d)
 end
end
-->8
--swing behaviour

hk={--hook state
 s=false,--swinging
 dx=0,--dx to move until dest.
 dy=0,--/y
}

function try_swing()
 local c=fig_cast(1,7)
 if(c==nil)return false
 --caluclate swing
 local x,y=c.x,c.y
 local dx,dy=0,0--movement delta
 if(fg.d==1)dx=-8
 if(fg.d==2)dx=8
 if(fg.d==3)dy=-8
 if(fg.d==4)dy=8
 local s=true--can swing
 local b=false--is blocked
 while(s and (not b))do
  x+=dx
  y+=dy
  local m=mgetp(x,y)
  s=fget(m,7)--is still a swing
  b=not s and fget(m,0)--blocked
 end
 --blocked
 if(b)return false
 --start swing
 hk.s=true
 hk.dx,hk.dy=x-c.x+dx,y-c.y+dy
 return true
end

function _update_swg()
 if(not hk.s)return
 if(abs(hk.dx)>0)then
  local d=sgn(hk.dx)
  fg.x+=d
  hk.dx-=d
 elseif(abs(hk.dy)>0)then
  local d=sgn(hk.dy)
  fg.y+=d
  hk.dy-=d  
 else
  hk.s=false
 end
end
-->8
--title behaviour

tl={
 v=false,--shown
 x=60,--ship x
 y=60,--/y
 s=200,--sprite
 t=0,--tick
 r={},--stars
 f=false,--on fire
 h=0,--horizon/frame
 p=false,--explosion
 c=-15,--exposion size
 m=true,--first screen
 i=0,--sequence
 a={201,202,201,203,201,204,204}
}

function _init_tit()
 tl.v=true
 local c={13,6,7}
 local s=flr(rnd(3)+1)
 for i=1,64 do
  add(tl.r,{
   x=rnd(128),
   y=rnd(128),
   c=c[s],
   s=s,
   z=1,
  })
 end
end

function update_fall_movie()
 if(tl.c>260)tl.m=false--next

 if(not tl.p and tl.x>128)then
  --explosion
  tl.p=true
 end

 if(not tl.f)then
  if(btnp(4)or btnp(5))then
   --fire
   tl.f=true
   tl.s=199
  end
 end

 tl.t+=1
 if(tl.t>4)then
  tl.t=0
  
  if(not tl.p)then
	  --bump ship
	  tl.x+=rnd(2)-1
	  tl.y+=rnd(2)-1
	  if(not tl.f)tl.x=mid(50,tl.x,70)
	  tl.y=mid(50,tl.y,70)
	 end
	 
	 if(tl.f)tl.h+=1
 end 
 --stars
 for s in all(tl.r) do
  if(s.y>(128-tl.h))then
   s.c=7
   s.x-=s.s/3
   s.z=s.s*2
   if(s.y>128-tl.h+80)then
    s.c=11
    s.z=s.s*3
   end
  else
   s.x-=s.s
  end
  if(s.x<0)then
   s.x=128
   s.s=flr(rnd(3)+1)
  end
 end
end

function draw_fall_movie()
 if(tl.f)then
  --enter horizon
  local h=tl.h
  local d=15
  rectfill(0,128-h   ,128,128-h+15,1 )
  rectfill(0,128-h+15,128,128-h+20,7 )
  rectfill(0,128-h+20,128,128-h+80,12)
  rectfill(0,128-h+80,128,128     ,3 )
  tl.x+=0.1
 end

 for s in all(tl.r) do
  if(s.z==1)then
   pset(s.x,s.y,s.c)
  else
   ovalfill(s.x,s.y,s.x+s.z*2,s.y+s.z,s.c)
  end
 end

 print(" another",48,28-tl.h,8)
 print("\nmoonshot.",10)
  
 if(not tl.f)then
  print("press 🅾️/❎ to start",26,100,6)
  print("@thomasmichaelwallace",42,120,5)
 end

 spr(tl.s,tl.x,tl.y)
 
 if(tl.p)then
  --explode
  tl.c+=2
  if(tl.c>0)circfill(130,80,tl.c,10)
  if(tl.c>50)circfill(130,80,tl.c-50,9)
  if(tl.c>80)circfill(130,80,tl.c-80,8)
 end
end

function update_fall_seq()
 if(tl.i==0)then
  --pause
  tl.t+=1
  if(tl.t>80)then
	  --init second
	  mp.n=5
	  tl.i=1
	  tl.y=60
	  tl.x=60
	  tl.s=201
	  tl.h=0
	 end
 elseif(tl.i==1)then
  tl.t+=1
  if(tl.t>120)then
   tl.t=0
   tl.h+=1
   if(tl.h<=#tl.a)then
    tl.s=tl.a[tl.h]
   else
    tl.i=2
   end
  end
  _update_map()
 elseif(tl.i==2)then
  --pause
  tl.t+=1
  if(tl.t>80)then
   tl.v=false
   mp.n=10--start game
   show_dia(176)
  end
 end
end

function draw_fall_seq()
 if(tl.i==1)then
  _draw_map()
  spr(tl.s,tl.x,tl.y)
 end
end

function _update_tit()
 if(tl.m)then
  update_fall_movie()
 else
  update_fall_seq()
 end
end

function _draw_tit()
 if(tl.m)then
  draw_fall_movie()
 else
  draw_fall_seq()
 end
end
-->8
--reset mechanic

rz={
 c=0,
}

function do_reset()
 --statue
 if(mp.n==11 or mp.n==12)then
  local h=false
  for x=0,15,1 do
   for y=0,15,1 do
    local m=mgetp(x*8,y*8)
    if(m==195)msetp(x*8,y*8,196)
    if(m==197)msetp(x*8,y*8,198)
    if(m==195 or m==197)h=true
   end
  end
  if(h and mp.n==11)msetp(96,32,197)
  if(h and mp.n==12)msetp(96,32,197) 
 end
end

function _update_res()
 --if(btn(4)and btn(5))do_reset()
end
__gfx__
0000000008888880099999900aaaaaa00bbbbbb00cccccc00eeeeee0566666650777777000b33b003b003b033bb0b30000000000000000000000000000000000
000000008288882894999949a4aaaa4ab3bbbb3bc1cccc1cedeeeede6666666677777777bbbbbbbbbbb3bbbbbbbbbbb000000000000000000000000000000000
007007008888888899999999aaaaaaaabbbbbbbbcccccccceeeeeeee66666666777777773bbb3bb3bbbbbb3bbb83bbbb00000000000000000000000000000000
000770008888888899999999aaaaaaaabbbbbbbbcccccccceeeeeeee66666666777777770bb8bbbbb8bb3bbbbbbb3bb300000000000000000000000000000000
000770008888888899999999aaaaaaaabbbbbbbbcccccccceeeeeeee66666666777777770bb33b8333bbb8bb33bbbbb300000000000000000000000000000000
007007008888888899999999aaaaaaaabbbbbbbbcccccccceeeeeeee6666666677777777b3b3b33333bb333b3333b8b000000000000000000000000000000000
000000008288882894999949a4aaaa4ab3bbbb3bc1cccc1cedeeeede6666666677777777bbb33333b33334333b33bbbb00000000000000000000000000000000
0000000008888880099999900aaaaaa00bbbbbb00cccccc00eeeeee056666665077777703bb38333333434b4333bbb3b00000000000000000000000000000000
000000008222222894444449affffffab333333b033333300dddddd077777777070700703bbbb33400000000333bb8b000000000000000000000000000000000
000000002222222244444444ffffffff3333333333bbbb33d5dddd5d76666667707000770bbbb3b400000000333bb3bb00000000000000000000000000000000
000000002222222244444444ffffffff333333333b83bbb3dddddddd7677776707000700b8bbb333000000004338bbb000000000000000000000000000000000
000000002222222244444444ffffffff333333333bbbb3b3dddddddd76777767700070003bb3b333000000003333bbbb00000000000000000000000000000000
000000002222222244444444ffffffff3333333333b3bbb3dddddddd76777767000700070bbbb3340000000033b3bb3300000000000000000000000000000000
000000002222222244444444ffffffff333333333bbbb8b3dddddddd7677776700700070bb3bb3b3000000004333bbbb00000000000000000000000000000000
000000002222222244444444ffffffff3333333333b3bb33d5dddd5d76666667770007070bb83333000000003333b3b000000000000000000000000000000000
000000008222222894444449affffffab333333b033333300dddddd077777777070070703bbb333400000000333bb8b300000000000000000000000000000000
0888888002222220000000003000300004f00f0300030003000000000000000070707070bbb33333333343343b33bbb300000000000000000000000000000000
8800008820202022000000000404040400f00f400b0000b00000000005000050070707070bb33343343b33433338bbbb00000000000000000000000000000000
800000082202020200000000ffffffff04f00f0030000000000000000000000000000000bbbb3333b33333333333bbb000000000000000000000000000000000
8000000820000002200000020003000030f00f40000b00300000000000000000000000003bb333bbbb3333bb3333b3b000000000000000000000000000000000
8000000820000002200000023000000004f30f00000030000000000000000000707070703bb8bbbbbbbbb8bbb33bbbbb00000000000000000000000000000000
800000080000000022020202ffffffff00f00f4303b0000b000000000000000007070707bbbb3bb8b3bbbb3bbb83bb3300000000000000000000000000000000
8800008800000000202020224040404004f00f00b0000b00000000000500005000000000bbbbbbbbbbbbbbbbbbbbbbb000000000000000000000000000000000
0888888000000000022222200030000330f03f4000b000300000000000000000000000000b3b0b0330b3bb03b0b33b0000000000000000000000000000000000
0000000000000000dddddddd44444444444444440000000022222222111111115666666504004440555555550000000000000000000000000000000000000000
020000200d0000d0deeeeeed4f4004f44ffffff405000050282822821cccccc1576666754f444f44565655650000000000000000000000000000000000000000
0000000000000000dedddded4f4004f4444444440000000022222222111111115666666504f4fff4555555550000000000000000000000000000000000000000
0000000000000000dedeeded4f4004f44000000400000000282222221cccccc15666666504444f44565555550000000000000000000000000000000000000000
0000000000000000dedeeded4f4004f44000000400000000222222821cccccc15666666544f44440555555650000000000000000000000000000000000000000
0000000000000000dedddded4f4004f444444444000000002222222211111111566666654fff4040555555550000000000000000000000000000000000000000
020000200d0000d0deeeeeed4f4004f44ffffff405000050282282821cccccc15766667544f444f4565565650000000000000000000000000000000000000000
0000000000000000dddddddd44444444444444440000000022222222111111115666666504440040555555550000000000000000000000000000000000000000
00001110000011100000005000005000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00011c1100011c1100000555000555000000eee00000eee000000000000000000000000000000000000000000000000000000000000000000000000000000000
0001ccc10001ccc10000557550557550000efffe000efffe00000000000000000000000000000000000000000000000000000000000000000000000000000000
0001ccc11111ccc10005577755577755000efffeeeeefffe00000000000000000000000000000000000000000000000000000000000000000000000000000000
0001ccc11111ccc10005557555557555000effeeeeeeeffe00000000000000000000000000000000000000000000000000000000000000000000000000000000
000111111111111100055555555555550000eeeeeeeeeee000000000000000000000000000000000000000000000000000000000000000000000000000000000
0001111111111111000555555555555500000ee77eeeeee000000000000000000000000000000000000000000000000000000000000000000000000000000000
000111111111111100055555555555550000eee77ee77eee00000000000000000000000000000000000000000000000000000000000000000000000000000000
000111771117711100055577757775550000eee07ee07eee00000000000000000000000000000000000000000000000000000000000000000000000000000000
000111771117711100055570757075550000eee77ee77eee00000000000000000000000000000000000000000000000000000000000000000000000000000000
000111751117511100055577757775550000eeeeeee77eee00000000000000000000000000000000000000000000000000000000000000000000000000000000
000111111c11111100055555555555550000eeeeeeeeeeee00000000000000000000000000000000000000000000000000000000000000000000000000000000
0001111115111111000555577777555500000eeeffffeee000000000000000000000000000000000000000000000000000000000000000000000000000000000
00001111c5c11110000555577788555500000eeeffffeee000000000000000000000000000000000000000000000000000000000000000000000000000000000
00001111555111100005555555885555000000eeeeeeee0000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000111ccc11100000555555588555500000000eeee000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000001111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000cc7110013000300b000300b30000000000000000000400000000b0000000000000000000000000000000000000000000000000000000000000000000
001ccc000000000030b03b0b0b03b0030000000000000000000b00000000b0000000000000000000000000000000000000000000000000000000000000000000
71100ccc0000000030b03b0b3b003b0b300aa00b300aa00b00040000000040000000000000000000000000000000000000000000000000000000000000000000
000000000001ccc000b30b0300300b3000a9aa0000ba9b000ff4fff00fff4ff00ffffff00ffffff0000000000000000000000000000000000000000000000000
00000000c71100ccb00300b300030b0b00aaaa00000aa0000f545ff00fff55f00ffffff00ffffff0000000000000000000000000000000000000000000000000
01ccc00000000000b303b3b3300b3003000aa003000aa0030f655ff00fff65f00ffffff00ffffff0000000000000000000000000000000000000000000000000
1100ccc700000000b300b3b0b30033b0b00000b0b00000b000655000000065000000000000000000000000000000000000000000000000000000000000000000
0000000000001ccc0300b3000300b3000300b3000300b30000060000000060000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000040000000080000000000000000000000000000000000000000000000000000000000000000000
0f000f000f000f000000000000000000000000000000000000080000000080000000000000000000000000000000000000000000000000000000000000000000
09999900099999000080800000080800000000000000000000040000000040000000000000000000000000000000000000000000000000000000000000000000
0959590009595900000568000085600000056000000660000ff4fff00fff4ff00ffffff00ffffff0000000000000000000000000000000000000000000000000
099f9900099f9900008560000005680000056000000550000ff456f00fff55600ffffff00ffffff0000000000000000000000000000000000000000000000000
0999890009989900000808000080800000000000000000000ff556f00fff55f00ffffff00ffffff0000000000000000000000000000000000000000000000000
09999900099999000000000000000000000000000000000000055600000056000000000000000000000000000000000000000000000000000000000000000000
09000900090009000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000eeeeee00eeeeee000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f000f000f000f000f000f000f000f00eeddddeeeeddddee00000000000000000000000000000000000000000000000000000000000000000000000000000000
0eeeee000eeeee000aaaaa000aaaaa00eddddddeedddddde00000000000000000000000000000000000000000000000000000000000000000000000000000000
0e5e5e000e5e5e000a5a5a000a5a5a00ed9ddddeedddd9de00000000000000000000000000000000000000000000000000000000000000000000000000000000
0eefee000eefee000aafaa000aafaa00ed9ddddeedddd9de00000000000000000000000000000000000000000000000000000000000000000000000000000000
0eee8e000ee8ee000aaa8a000aa8aa00eddddddeedddddde00000000000000000000000000000000000000000000000000000000000000000000000000000000
0eeeee000eeeee000aaaaa000aaaaa00eeddddeeeeddddee00000000000000000000000000000000000000000000000000000000000000000000000000000000
0e000e000e000e000a000a000a000a000eeeeee00eeeeee000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f000f000f000f000600060006000600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0ccccc000ccccc000555550005555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0c5c5c000c5c5c000565650005656500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0ccfcc000ccfcc000557550005575500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0ccc8c000cc8cc000555850005585500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0ccccc000ccccc000555550005555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0c000c000c000c000500050005000500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000c666666cc44ffffc5666666305555350009988000066660000000000000000000000000000000000000000000000000000000000
0000000000f00f0000f00f0066666666440000ff66666666535b55550a9877600677766000f0000000f0000000000f0000f00f00000000000000000000000000
000000000044440000444400655555564040040f6555555635553535a9888a666776aa66004444f0004444f00f44440000444400000000000000000000000000
00000000054544000044440066666666f004f00f66666666553553550a98aa666766aa6600444400004544000044540000455400000000000000000000000000
00000000008444000044440065555556f00f400f6555555653b5553ba88866656766666500444400004444000044440000448400000000000000000000000000
0000000000ff44f0004f440066666666f040040466666666b55553550988865566666655004ff400004ff400004ff400004ff400000000000000000000000000
00000000004444000044444065555556ff00004465555556555555330a9886500666655000444400004444000044440004444400000000000000000000000000
00000000004004000040000066666666cffff44c66666666055355b0009988000066550000400400004004000040040000000400000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00f00f0000f00f0000f00f00000000000a6666600a5050500a000000000000000000000000000000000000000000000000000000000000000000000000000000
0044440000444400004444003000300b000000000060505006000000000000000000000000000000000000000000000000000000000000000000000000000000
05454400054544000044440000b00b00000000000065005006000000000000000000000000000000000000000000000000000000000000000000000000000000
00844400008444f00044440000000000000000000006050006000000000000000000000000000000000000000000000000000000000000000000000000000000
00ff44f000ff44400044f40000030003000000000006550006000000000000000000000000000000000000000000000000000000000000000000000000000000
044444000044440004444400b00000b0000000000000600006000000000000000000000000000000000000000000000000000000000000000000000000000000
0000400000400400000004000300b300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000006655660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000f0000f0000000f00f0065555556000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f444400004444f0004444006559a556000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00444400004554000045540055855b55000560000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00444400004444000044840055755c55000560000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0044f400004ff400004ff400655ed556000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00444400004444000444440065555556000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00400400004004000000040006655660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00f0000000000f0000f00f000080080000800800008008000080080000c00c0000c00c0000c00c0000c00c000000000000000000000000000000000000700700
004444f00f4444000044440000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff000000000000000000000000000000000000700700
00444400004554000045540005f5ff0000ffff0000ff5f5000f55f0005f5ff0000ffff0000ff5f5000f55f000000000000000000000000000000000000000000
004444000044840000484400008fff0000ffff0000fff80000ff8f00008fff0000ffff0000fff80000ff8f000000000000000000000000000000000000000000
004f4400004ff400004ff40000ffff8000f8ff0008ffff0000ffff0000ffffc000fcff000cffff0000ffff000000000000000000000000000000000070000007
0044440000444400004444400088880000888800008888000088880000cccc0000cccc0000cccc0000cccc000000000000000000000000000000000077000077
0040040000400400004000000080080000800800008008000080080000c00c0000c00c0000c00c0000c00c000000000000000000000000000000000007777770
__gff__
0001010101010101010101010000000000010101010101010101010100000000000000010100000001010101000000000100010101000001000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
05051010202001010101000000000000030311118181000000000000000000000303030301000000000000000000000003030303000000000000000000000000000000090c0908000000000000000000000000000000000000000000000000000000004181000000000000000000000000000001010101000000000000000000
__map__
3030303030303030303030303030303030303030300202020202020202020202000000000000392525252525253900001717171717171717171717171717171705000000000000000000000000000005000000000000000000000000000000000707000000000707070707070707070700393939393939393919292a2a2a2a2a
3020203020209294949494202020203030302020300200000000000000000202393939393939393939252539393939391700000000000000000000000000000000000000000000000000000000000005000000000000000000000000000000000707000000000700000000000000000700392525252525252519001b25252519
3094942094949494209494929292929494949420300200000000000000000002392525252525252525252525252525391700c6c5250000000000000000000000000000000000000000000000000000050000000000003232323200000000000007070700000007000000000000000007003939252523232325292a2b25862519
3020949420929420949420303030202030202094300200000000008200820002392524253923232323232323232323391700309430303030303000000000000000000000000000000000000000000005000032323232313131313232323200000700070000000707000000000007070700003939252525242525f72525252519
3030943094943020922094203030302020929420300202000000000000000002392524253925252525252525252525391700302525252530c63000000000000000000000000000000000000000000005003232313131313131313131313232000700078200000007070707070707000723232323232325242539253925250919
3020949494203094949420943030303030942094303002000000000000000002392524253925242539393925258225391730808080808080c53000000000000000000000000000000000000000000005323231313131313131313131313132320700078200000000000000000007070700003925252525242525252525252919
309494309430202094949294209420949420942030300200000000900000000239252425392524252525392539252539173080803030943025303000000000000000000000000005000000000000000532313131a4a431313131a4a4313132320700070000000007000000000000000700003925232323232323232439393929
309494942094929420943030303030303030303030300200000000000000000239252425252524f325252525252525391700302530309430252525300000000000000000000000050005000000000005323131a4a4313131313131a4a4313132070007000000000707070082000007070a0b3925253939242525252425253900
30209420302030303020302020942020202020202020200000000000000000023923232323232425252539253925253917003025253025252530943000000000000000000000000505050000000000053231313131313131313131313131313207000700000000070007008200070707001b3925252539242524252425253900
30942092942030202092309430303030303030303030020000000000000000023925822525253939392539253925253917003025253030308080943000000000000000000000000000050000000000053231313131a431313131a43131313132070007070082000707070000000700072a2b3925f72525242524252425253939
3030309494943094309430943020929494949494203002000000000000000002392525259625252525253925392525391717172517171700808092300000000000000000000000000000000000000005323131a431a4a43131a4a431a4313132070000070000000000000000070700071b393925252525252524252525252539
3020949494203020942092203094942094209494203002020202000002020202393939252525252525253925392525250000000000001700000094300000000000000000000000000000000000000005323131a43131313131313131a4313132070000070082000000000000070000071b253923232323232324252525252539
3094209420303030303030303020949294922030303002000000000000820002392539393939392539393925392525250000000082001700000025000000000000000000000000000000000000000005323131a4a4313131313131a4a4313132070000070000000000000000070700071b252525252525252524393939392539
309430209494949294929492949294949494922020300200000000000000820239252525252525252525252525252539040000000000170000000000000000000000000000000000000000000000000532313131a4313131313131a431313132070007070000000000000000000700071b252525252525252525252525252539
302094929420942094209420942030303030303020300200000000000002020239252525252525252525252525253939040000000000170000000000000000000000000000000000000000000000000532323131313131313131313131313232070707000000000000000000000707072b393939393939252525252525393939
30303030303030303030303030303030303030303030020000000009020200000a0a0b252525393939393939393939000404000000171717171717171717171705050505050505050505050505050505003231313131a43131a43131313132000707000000000000000000000000070700000000000039252525252525390000
171717171717171717171717171717172525252525253925252525191900000000001b252525393939393939393939392a2a2525252a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a1900163231313131a43131a43131313132161717000000000000000000000000171717011727170217160304170605170517
1701011701040404040404040404041717172525252539252525252919000000001b2b25252525252525252525252525252525252525152525252525252525292a2b2525c42525252580252525251900163232313131313131313131313232160017000082820000000082000000170017010527020216160304172705172717
17012701010606062706060606060417173434373734342525252525292a2a2a2a2b2525252525252525252525c6c6c6c6c6c6c68025252515151515151525252525251515090a0a0b8080808080190016003232323231313131323232320016001700000000000000000082000017001701050503031617030427e327172717
1727e3170606030327030303032704171735383535353382252525252525252525252525252525252525252525c62525251580808015151515252525252515151515152525292a2a2b80822525251909161600000032323131323200000000160017000000000000000000000000170017011705030427e32716021702050517
1716270606170316161605050527271717353835a0353382252525252525252525252525252525252525252525c62525251580808080808015258080c6c6c6c6c6c6c6c6c680252525802525c525291916160000000000000000000000001616001717170000000000000000001717001727e327030402170116020205270517
1716170506172705051605171717e3171735353535353434342525252525252525252582252525252525252525c62525251580c625808080152580802515151515151515c680151525802525c6252519001616000000820000000000161616000000001717171717001717171717000017161706062702060116170227e31717
1716030527e3270101012701012727273535353535353535332525252525252525252525252525343435343425c52525251525c6258080801525c680251525252525c6c6c6802515258025c6c6c62519000016000000160016160000160000000000000000000017001700000000000017161617060627060127010117270417
1703030302170304040405020517051717353a3a3a353535332525252525252525822582252534343535353325c62525251525c615152515151525c6251525151515c615808025808080808080808019000016000000160000160000161600000000000000000017001700000000000017042702022703061716162716160417
1716160302022702020227022704051717353a3a3a3535353525252525252525252525252525333535353533252525252515c6c6c6c62515252525c6251525151515c61525808080828225c6c6c6251900001600000016001616000000161600000000000000001700170000000000001704e31702020327e317042704040417
171716030327010105050517e327061717353535353535353325252525252525252525252525333535353534373737340b25c6808080c61525c680c68080c6252525c62525258025252525c6c6c62519001616000000160016160000000016000000000000000017001700000000000017042703030203032704040101012717
1716161617161601010105052702061717343437373737343425822525822525252525252525333536363535353535331b25c680c680c62525c68015158080090b25c62580808080c6c615c680c6090a161600000000000000000000001616000000000000171717171717170000000017171717271717171717171717171717
17160427e327041717010101010206171717252525252525392525252525252525252525252533353636353535b035331b2525808080c6152525c6c6c6c680191b25c6c680c6c680c6c6c6c680c61900160000000000000000000000001600000000000017000000a20000001700000000003335353535353535353535330000
1704040417030403270302020202061725252525152525253925252525090b25252525252525333535353535353535330a0b8225c615c62515152515c6c625292b2525c6c6c6802525c615258025292a16000000000000000000000000160000000000001700000000000000170000000000333535353535353a3a3a35330000
1701012703031727e327170606060617251525252525152539252525090a0a0a0a0b2525252533353535383536353434000a0b25c6c6c6c680c68080c6c625090a0b2525808080252525252580808019160000000000000000000000001616000000000000171717171717170000000000003335383535b23535353535330000
170117e327021716270417060505051725252515252525253939393919000000001b252525253335353538353535330000000a0a0a0b2525808015801525090a0a0a0a0a0a0a0a0b828225090a0a0a0a160000000000000000000000000016160000000000000000000000000000000000003335383535353533343434340000
1701172717021716030417060517051725252525252525252525252519000000001b252525253434343434343434330000000000000a0a0a0a0a0a0a0a0a0a00000000000000001b0a0a0a1900000000160000000000160000160000000000160000000000000000000000000000000000003334343437373733000000000000
